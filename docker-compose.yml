version: '3'

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

volumes:
  postgres:
    driver: ${VOLUMES_DRIVER}
  redis:
    driver: ${VOLUMES_DRIVER}
  sentry:
    driver: ${VOLUMES_DRIVER}

services:

  ### Workspace Utilities ##################################
  workspace:
    build:
      context: ./laradock/workspace
      args:
        - CHANGE_SOURCE=${CHANGE_SOURCE}
        - SHELL_OH_MY_ZSH=${SHELL_OH_MY_ZSH}
        - UBUNTU_SOURCE=${UBUNTU_SOURCE}
        - BASE_IMAGE_TAG_PREFIX=${WORKSPACE_BASE_IMAGE_TAG_PREFIX}
        - LARADOCK_PHP_VERSION=${PHP_VERSION}
        - INSTALL_XDEBUG=${WORKSPACE_INSTALL_XDEBUG}
        - INSTALL_PHPREDIS=${WORKSPACE_INSTALL_PHPREDIS}
        - INSTALL_NODE=${WORKSPACE_INSTALL_NODE}
        - COMPOSER_GLOBAL_INSTALL=${WORKSPACE_COMPOSER_GLOBAL_INSTALL}
        - INSTALL_PING=${WORKSPACE_INSTALL_PING}
        - PUID=${HOST_PUID}
        - PGID=${HOST_PGID}
        - NODE_VERSION=${WORKSPACE_NODE_VERSION}
        - TZ=${WORKSPACE_TIMEZONE}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - ./laradock/php-worker/supervisord.d:/etc/supervisord.d
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    tty: true
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
    networks:
      - frontend
      - backend

  ### PHP-FPM ##############################################
  php-fpm:
    build:
      context: ./laradock/php-fpm
      args:
        - CHANGE_SOURCE=${CHANGE_SOURCE}
        - BASE_IMAGE_TAG_PREFIX=${PHP_FPM_BASE_IMAGE_TAG_PREFIX}
        - LARADOCK_PHP_VERSION=${PHP_VERSION}
        - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
        - INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}
        - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
        - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
        - INSTALL_PGSQL=${PHP_FPM_INSTALL_PGSQL}
        - INSTALL_PING=${PHP_FPM_INSTALL_PING}
        - ADDITIONAL_LOCALES=${PHP_FPM_ADDITIONAL_LOCALES}
        - PUID=${HOST_PUID}
        - PGID=${HOST_PGID}
        - LOCALE=${PHP_FPM_DEFAULT_LOCALE}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ./laradock/php-fpm/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
    expose:
      - "9000"
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
      - FAKETIME=${PHP_FPM_FAKETIME}
    depends_on:
      - workspace
    networks:
      - backend

  ### NGINX Server #########################################
  nginx:
    build:
      context: ./laradock/nginx
      args:
        - CHANGE_SOURCE=${CHANGE_SOURCE}
        - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
    depends_on:
      - php-fpm
    networks:
      - frontend
      - backend

  ### PostgreSQL ###########################################
  postgres:
    build:
      context: ./laradock/postgres
      args:
        - POSTGRES_VERSION=${POSTGRES_VERSION}
    volumes:
      - ${DATA_PATH_HOST}/postgres:/var/lib/postgresql/data
      - ${POSTGRES_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - backend

  ### Redis ################################################
  redis:
    build: ./laradock/redis
    volumes:
      - ${DATA_PATH_HOST}/redis:/data
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - backend

  ### Sentry ################################################
  sentry:
    image: sentry:latest
    depends_on:
      - redis
      - postgres
    links:
      - redis
      - postgres
    ports:
      - "${SENTRY_PORT}:9000"
    environment:
      - SENTRY_SECRET_KEY=${SENTRY_SECRET_KEY}
      - SENTRY_REDIS_HOST=redis
      - SENTRY_POSTGRES_HOST=postgres
      - SENTRY_DB_USER=${POSTGRES_USER}
      - SENTRY_DB_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ${DATA_PATH_HOST}/sentry:/var/lib/sentry/files
    networks:
      - backend
      - frontend

  sentry_beat:
    image: sentry:latest
    depends_on:
      - redis
      - postgres
    command: "sentry run cron"
    environment:
      - SENTRY_SECRET_KEY=${SENTRY_SECRET_KEY}
      - SENTRY_REDIS_HOST=redis
      - SENTRY_POSTGRES_HOST=postgres
      - SENTRY_DB_USER=${POSTGRES_USER}
      - SENTRY_DB_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - backend
      - frontend

  sentry_worker:
    image: sentry:latest
    depends_on:
      - redis
      - postgres
    command: "sentry run worker"
    environment:
      - SENTRY_SECRET_KEY=${SENTRY_SECRET_KEY}
      - SENTRY_REDIS_HOST=redis
      - SENTRY_POSTGRES_HOST=postgres
      - SENTRY_DB_USER=${POSTGRES_USER}
      - SENTRY_DB_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - backend
      - frontend